name: Mutation Testing

on:
  # Run on pull requests to main
  pull_request:
    branches: [main]
    paths:
      - 'trading212-mcp-server/src/**'
      - 'trading212-mcp-server/Cargo.toml'
      - 'trading212-mcp-server/Cargo.lock'
      - 'trading212-mcp-server/.cargo/mutants.toml'
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Weekly scheduled run
  schedule:
    - cron: '0 0 * * 0'  # Sunday at midnight

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  mutation-testing:
    name: Run Mutation Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    defaults:
      run:
        working-directory: ./trading212-mcp-server
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for diff comparison
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            trading212-mcp-server/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('trading212-mcp-server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Install cargo-mutants
        run: |
          if ! command -v cargo-mutants &> /dev/null; then
            cargo install cargo-mutants
          fi
      
      - name: Run incremental mutation testing on PR
        if: github.event_name == 'pull_request'
        run: |
          # Generate diff file for cargo-mutants
          echo "Generating diff file from ${{ github.event.pull_request.base.sha }}..${{ github.sha }}"
          git diff ${{ github.event.pull_request.base.sha }}..${{ github.sha }} > pr-changes.diff
          echo "Diff file generated, size: $(wc -l < pr-changes.diff) lines"
          
          # Use --in-diff with the generated diff file
          cargo mutants --in-diff pr-changes.diff \
            --timeout 30 \
            --output mutants-pr.out
      
      - name: Run full mutation testing
        if: github.event_name != 'pull_request'
        run: cargo mutants --output mutants-full.out
        continue-on-error: true
      
      - name: Generate mutation report summary
        if: always()
        run: |
          if [ -d "mutants-pr.out" ]; then
            echo "## PR Mutation Testing Results (Changed Lines Only)" >> $GITHUB_STEP_SUMMARY
            cat mutants-pr.out/outcomes.json | jq -r '
              "- Total: \(.summary.total)",
              "- Caught: \(.summary.caught)",
              "- Missed: \(.summary.missed)",
              "- Unviable: \(.summary.unviable)",
              "- Timeout: \(.summary.timeout)"
            ' >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Report parsing failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "mutants-full.out" ]; then
            echo "## Full Mutation Testing Results" >> $GITHUB_STEP_SUMMARY
            cat mutants-full.out/outcomes.json | jq -r '
              "- Total: \(.summary.total)",
              "- Caught: \(.summary.caught)",
              "- Missed: \(.summary.missed)",
              "- Unviable: \(.summary.unviable)",
              "- Timeout: \(.summary.timeout)"
            ' >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Report parsing failed" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Upload mutation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutation-report-${{ github.sha }}
          path: |
            mutants-pr.out/
            mutants-full.out/
          retention-days: 30
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            let comment = '## üß¨ Mutation Testing Results (Changed Lines Only)\n\n' +
                         '> This PR was tested using incremental mutation testing (`--in-diff`) which only tests mutations in changed lines, making it faster and more focused.\n\n';
            
            try {
              const outcomes = JSON.parse(fs.readFileSync('mutants-pr.out/outcomes.json', 'utf8'));
              const total = outcomes.summary.total || 0;
              const caught = outcomes.summary.caught || 0;
              const missed = outcomes.summary.missed || 0;
              const score = total > 0 ? ((caught / total) * 100).toFixed(1) : 0;
              
              comment += `**Mutation Score: ${score}%**\n\n`;
              comment += `| Metric | Count |\n|--------|-------|\n`;
              comment += `| Total Mutations | ${total} |\n`;
              comment += `| Caught | ${caught} ‚úÖ |\n`;
              comment += `| Missed | ${missed} ‚ö†Ô∏è |\n`;
              comment += `| Unviable | ${outcomes.summary.unviable || 0} |\n`;
              comment += `| Timeout | ${outcomes.summary.timeout || 0} |\n`;
              
              if (missed > 0) {
                comment += `\n‚ö†Ô∏è **${missed} mutations were not caught by tests.**\n`;
                comment += `Review the mutation report artifact for details.\n`;
              }
            } catch (e) {
              comment += 'Failed to parse mutation testing results.\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
